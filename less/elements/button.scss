.button-elements({
  display: inline-block;
  font-size: 112.5%;
  text-align: center;
  vertical-align: middle;
  min-height: 32px;
  line-height: $line-height;
  padding: 0.4em .8em;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: none;
  @include border-radius();
  outline: none;
  white-space: nowrap;
  text-decoration: none;
  @include button-color($color1c);
  @include make-buttons-for($semantic-colors);
  @include no-user-select();
});

@mixin button-elements($rules) {
  button,
  .button,
  input[type="button"],
  input[type="submit"] { $rules();}
}

@mixin make-buttons-for($colors) {
  // make buttons for a list of color variable names
  // buttons will use variable names as class names

  $length: length($colors);

  @include make-button();

  @mixin make-button($index:1) when ($index <= $length) {
    $color-name: extract($colors, $index);
    $color: $$color-name;

    @include set-c-color($color);

    &.#{$color-name} { .button-color($color);}

    @include make-button($index + 1);
  }
}

@mixin button-color($color) when (default()) {
  @include set-lumafix($color);
  .invert-text-against($lumafix; $contrast-standard: 3; $button: true;);
}
